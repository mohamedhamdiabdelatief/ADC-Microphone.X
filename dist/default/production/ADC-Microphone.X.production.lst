

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 15:26:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  001E                     _ADRESH	set	30
   167  001F                     _ADCON0bits	set	31
   168  001F                     _ADCON0	set	31
   169  00FA                     _GO_DONE	set	250
   170  003F                     _RC7	set	63
   171  009E                     _ADRESL	set	158
   172  009F                     _ADCON1	set	159
   173  043F                     _TRISC7	set	1087
   174                           
   175                           	psect	cinit
   176  07FC                     start_initialization:	
   177                           ; #config settings
   178                           
   179  07FC                     __initialization:
   180  07FC                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183  07FC                     __end_of__initialization:
   184  07FC  0183               	clrf	3
   185  07FD  120A  118A  2FC1   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188  0070                     __pcstackCOMMON:
   189  0070                     ?_ADC_Init:
   190  0070                     ??_ADC_Init:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_ADC_Read:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 2 bytes @ 0x0
   201  0070                     	ds	2
   202  0072                     ??_ADC_Read:
   203                           
   204                           ; 1 bytes @ 0x2
   205  0072                     	ds	2
   206  0074                     ADC_Read@ANC:
   207                           
   208                           ; 1 bytes @ 0x4
   209  0074                     	ds	1
   210  0075                     ??_main:
   211                           
   212                           ; 1 bytes @ 0x5
   213  0075                     	ds	2
   214  0077                     main@TH:
   215                           
   216                           ; 2 bytes @ 0x7
   217  0077                     	ds	2
   218  0079                     main@AN0_RES:
   219                           
   220                           ; 2 bytes @ 0x9
   221  0079                     	ds	2
   222                           
   223                           	psect	maintext
   224  07C1                     __pmaintext:	
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 15 in file "Microphone-interface.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  AN0_RES         2    9[COMMON] unsigned int 
   235 ;;  TH              2    7[COMMON] unsigned int 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         4       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0
   248 ;;      Totals:         6       0       0       0       0
   249 ;;Total ram usage:        6 bytes
   250 ;; Hardware stack levels required when called:    1
   251 ;; This function calls:
   252 ;;		_ADC_Init
   253 ;;		_ADC_Read
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           
   260                           ;psect for function _main
   261  07C1                     _main:
   262  07C1                     l683:	
   263                           ;incstack = 0
   264                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   265                           
   266  07C1                     l685:
   267  07C1  3052               	movlw	82
   268  07C2  00F7               	movwf	main@TH
   269  07C3  3003               	movlw	3
   270  07C4  00F8               	movwf	main@TH+1
   271  07C5                     l687:
   272                           
   273                           ;Microphone-interface.c: 19:     ADC_Init();
   274  07C5  120A  118A  2788  120A  118A  	fcall	_ADC_Init
   275  07CA                     l689:
   276                           
   277                           ;Microphone-interface.c: 20:     TRISC7=0;
   278  07CA  1683               	bsf	3,5	;RP0=1, select bank1
   279  07CB  1303               	bcf	3,6	;RP1=0, select bank1
   280  07CC  1387               	bcf	7,7	;volatile
   281  07CD                     l691:
   282                           
   283                           ;Microphone-interface.c: 21:     RC7=0;
   284  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   285  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   286  07CF  1387               	bcf	7,7	;volatile
   287  07D0                     l693:
   288                           
   289                           ;Microphone-interface.c: 24:     {;Microphone-interface.c: 25:         AN0_RES = ADC_Rea
      +                          d(0);
   290  07D0  3000               	movlw	0
   291  07D1  120A  118A  2791  120A  118A  	fcall	_ADC_Read
   292  07D6  0871               	movf	?_ADC_Read+1,w
   293  07D7  00FA               	movwf	main@AN0_RES+1
   294  07D8  0870               	movf	?_ADC_Read,w
   295  07D9  00F9               	movwf	main@AN0_RES
   296  07DA                     l695:
   297                           
   298                           ;Microphone-interface.c: 26:         if(AN0_RES > TH)
   299  07DA  087A               	movf	main@AN0_RES+1,w
   300  07DB  0278               	subwf	main@TH+1,w
   301  07DC  1D03               	skipz
   302  07DD  2FE0               	goto	u85
   303  07DE  0879               	movf	main@AN0_RES,w
   304  07DF  0277               	subwf	main@TH,w
   305  07E0                     u85:
   306  07E0  1803               	skipnc
   307  07E1  2FE3               	goto	u81
   308  07E2  2FE4               	goto	u80
   309  07E3                     u81:
   310  07E3  2FF1               	goto	l28
   311  07E4                     u80:
   312  07E4                     l697:
   313                           
   314                           ;Microphone-interface.c: 27:         {;Microphone-interface.c: 28:           RC7 = ~RC7;
   315  07E4  3080               	movlw	128
   316  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   317  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   318  07E7  0687               	xorwf	7,f
   319                           
   320                           ;Microphone-interface.c: 29:           _delay((unsigned long)((10)*(4000000/4000.0)));
   321  07E8  300D               	movlw	13
   322  07E9  00F6               	movwf	??_main+1
   323  07EA  30FB               	movlw	251
   324  07EB  00F5               	movwf	??_main
   325  07EC                     u97:
   326  07EC  0BF5               	decfsz	??_main,f
   327  07ED  2FEC               	goto	u97
   328  07EE  0BF6               	decfsz	??_main+1,f
   329  07EF  2FEC               	goto	u97
   330  07F0  2FF1               	nop2
   331  07F1                     l28:	
   332                           ;Microphone-interface.c: 30:         }
   333                           
   334                           
   335                           ;Microphone-interface.c: 31:         _delay((unsigned long)((1)*(4000000/4000.0)));
   336  07F1  30C7               	movlw	199
   337  07F2  00F5               	movwf	??_main
   338  07F3                     u107:
   339  07F3  2FF4               	nop2
   340  07F4  0BF5               	decfsz	??_main,f
   341  07F5  2FF3               	goto	u107
   342  07F6  2FF7               	nop2
   343  07F7  2FF8               	nop2
   344  07F8  2FD0               	goto	l693
   345  07F9  120A  118A  2800   	ljmp	start
   346  07FC                     __end_of_main:
   347                           
   348                           	psect	text1
   349  0791                     __ptext1:	
   350 ;; *************** function _ADC_Read *****************
   351 ;; Defined at:
   352 ;;		line 44 in file "Microphone-interface.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;  ANC             1    wreg     unsigned char 
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  ANC             1    4[COMMON] unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2    0[COMMON] unsigned int 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         2       0       0       0       0
   367 ;;      Locals:         1       0       0       0       0
   368 ;;      Temps:          2       0       0       0       0
   369 ;;      Totals:         5       0       0       0       0
   370 ;;Total ram usage:        5 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _ADC_Read
   381  0791                     _ADC_Read:
   382                           
   383                           ;incstack = 0
   384                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   385                           ;ADC_Read@ANC stored from wreg
   386  0791  00F4               	movwf	ADC_Read@ANC
   387  0792                     l667:
   388                           
   389                           ;Microphone-interface.c: 44: uint16_t ADC_Read(uint8_t ANC);Microphone-interface.c: 45: 
      +                          {;Microphone-interface.c: 46:     if(ANC<0 || ANC>7)
   390  0792  3008               	movlw	8
   391  0793  0274               	subwf	ADC_Read@ANC,w
   392  0794  1C03               	skipc
   393  0795  2F97               	goto	u51
   394  0796  2F98               	goto	u50
   395  0797                     u51:
   396  0797  2F9B               	goto	l673
   397  0798                     u50:
   398  0798                     l669:
   399                           
   400                           ;Microphone-interface.c: 47:     { return 0;}
   401  0798  01F0               	clrf	?_ADC_Read
   402  0799  01F1               	clrf	?_ADC_Read+1
   403  079A  2FC0               	goto	l38
   404  079B                     l673:
   405                           
   406                           ;Microphone-interface.c: 48:     ADCON0 &= 0b11000101;
   407  079B  30C5               	movlw	197
   408  079C  00F2               	movwf	??_ADC_Read
   409  079D  0872               	movf	??_ADC_Read,w
   410  079E  1283               	bcf	3,5	;RP0=0, select bank0
   411  079F  1303               	bcf	3,6	;RP1=0, select bank0
   412  07A0  059F               	andwf	31,f	;volatile
   413                           
   414                           ;Microphone-interface.c: 49:     ADCON0 |= ANC<<3;
   415  07A1  0874               	movf	ADC_Read@ANC,w	;volatile
   416  07A2  00F2               	movwf	??_ADC_Read
   417  07A3  3002               	movlw	2
   418  07A4                     u65:
   419  07A4  1003               	clrc
   420  07A5  0DF2               	rlf	??_ADC_Read,f
   421  07A6  3EFF               	addlw	-1
   422  07A7  1D03               	skipz
   423  07A8  2FA4               	goto	u65
   424  07A9  1003               	clrc
   425  07AA  0D72               	rlf	??_ADC_Read,w
   426  07AB  00F3               	movwf	??_ADC_Read+1
   427  07AC  0873               	movf	??_ADC_Read+1,w
   428  07AD  049F               	iorwf	31,f	;volatile
   429  07AE                     l675:
   430                           
   431                           ;Microphone-interface.c: 51:     _delay((unsigned long)((30)*(4000000/4000000.0)));
   432  07AE  3009               	movlw	9
   433  07AF  00F2               	movwf	??_ADC_Read
   434  07B0                     u117:
   435  07B0  0BF2               	decfsz	??_ADC_Read,f
   436  07B1  2FB0               	goto	u117
   437  07B2  2FB3               	nop2
   438  07B3                     l677:
   439                           
   440                           ;Microphone-interface.c: 52:     GO_DONE = 1;
   441  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   442  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   443  07B5  151F               	bsf	31,2	;volatile
   444  07B6                     l39:	
   445                           ;Microphone-interface.c: 53:     while(ADCON0bits.GO_DONE);
   446                           
   447  07B6  191F               	btfsc	31,2	;volatile
   448  07B7  2FB9               	goto	u71
   449  07B8  2FBA               	goto	u70
   450  07B9                     u71:
   451  07B9  2FB6               	goto	l39
   452  07BA                     u70:
   453  07BA                     l679:
   454                           
   455                           ;Microphone-interface.c: 55:     return ((ADRESH << 8) + ADRESL);
   456  07BA  081E               	movf	30,w	;volatile
   457  07BB  00F1               	movwf	?_ADC_Read+1
   458  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   459  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   460  07BE  081E               	movf	30,w	;volatile
   461  07BF  00F0               	movwf	?_ADC_Read
   462  07C0                     l38:
   463  07C0  0008               	return
   464  07C1                     __end_of_ADC_Read:
   465                           
   466                           	psect	text2
   467  0788                     __ptext2:	
   468 ;; *************** function _ADC_Init *****************
   469 ;; Defined at:
   470 ;;		line 38 in file "Microphone-interface.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _ADC_Init
   499  0788                     _ADC_Init:
   500  0788                     l633:	
   501                           ;incstack = 0
   502                           ; Regs used in _ADC_Init: [wreg]
   503                           
   504                           
   505                           ;Microphone-interface.c: 40:     ADCON0 = 0x41;
   506  0788  3041               	movlw	65
   507  0789  1283               	bcf	3,5	;RP0=0, select bank0
   508  078A  1303               	bcf	3,6	;RP1=0, select bank0
   509  078B  009F               	movwf	31	;volatile
   510                           
   511                           ;Microphone-interface.c: 41:     ADCON1 = 0x80;
   512  078C  3080               	movlw	128
   513  078D  1683               	bsf	3,5	;RP0=1, select bank1
   514  078E  1303               	bcf	3,6	;RP1=0, select bank1
   515  078F  009F               	movwf	31	;volatile
   516  0790                     l34:
   517  0790  0008               	return
   518  0791                     __end_of_ADC_Init:
   519  007E                     btemp	set	126	;btemp
   520  007E                     wtemp0	set	126
   521                           
   522                           	psect	config
   523                           
   524                           ;Config register CONFIG @ 0x2007
   525                           ;	Oscillator Selection bits
   526                           ;	FOSC = XT, XT oscillator
   527                           ;	Watchdog Timer Enable bit
   528                           ;	WDTE = OFF, WDT disabled
   529                           ;	Power-up Timer Enable bit
   530                           ;	PWRTE = ON, PWRT enabled
   531                           ;	Brown-out Reset Enable bit
   532                           ;	BOREN = OFF, BOR disabled
   533                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   534                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   535                           ;	Data EEPROM Memory Code Protection bit
   536                           ;	CPD = OFF, Data EEPROM code protection off
   537                           ;	Flash Program Memory Write Enable bits
   538                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   539                           ;	In-Circuit Debugger Mode bit
   540                           ;	DEBUG = 0x1, unprogrammed default
   541                           ;	Flash Program Memory Code Protection bit
   542                           ;	CP = OFF, Code protection off
   543  2007                     	org	8199
   544  2007  3F31               	dw	16177

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      91
                                              5 COMMON     6     6      0
                           _ADC_Init
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 15:26:32 2021

                     l34 0790                       l28 07F1                       l38 07C0  
                     l39 07B6                       u50 0798                       u51 0797  
                     u70 07BA                       u71 07B9                       u80 07E4  
                     u65 07A4                       u81 07E3                       u85 07E0  
                     u97 07EC                      l633 0788                      l673 079B  
                    l675 07AE                      l667 0792                      l691 07CD  
                    l683 07C1                      l677 07B3                      l669 0798  
                    l693 07D0                      l685 07C1                      l679 07BA  
                    l695 07DA                      l687 07C5                      l697 07E4  
                    l689 07CA                      _RC7 003F                      u107 07F3  
                    u117 07B0                     _main 07C1                     btemp 007E  
       __end_of_ADC_Init 0791         __end_of_ADC_Read 07C1                     start 0000  
                  ?_main 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0075  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _TRISC7 043F                   main@TH 0077  
              ?_ADC_Init 0070                ?_ADC_Read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_ADC_Init 0070               ??_ADC_Read 0072  
             __pmaintext 07C1                  _GO_DONE 00FA                  __ptext1 0791  
                __ptext2 0788     end_of_initialization 07FC        __size_of_ADC_Init 0009  
      __size_of_ADC_Read 0030      start_initialization 07FC                ___latbits 0002  
               _ADC_Init 0788                 _ADC_Read 0791              ADC_Read@ANC 0074  
             _ADCON0bits 001F            __size_of_main 003B              main@AN0_RES 0079  
